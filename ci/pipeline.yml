groups:
- name: master
  jobs:
  - build
  - deploy
  - performance
  - stage
  - ship
- name: merge-requests
  jobs:
  - test
- name: versions
  jobs:
  - minor
  - major
- name: ci-images
  jobs:
  - build-images

jobs:
- name: test
  public: true
  serial: true
  plan:
  - get: repo
    resource: merge-requests
    trigger: true
  - put: merge-requests
    params:
      repository: repo
      status: running
  - task: run-tests
    file: repo/ci/tasks/run-tests.yml
  on_failure:
    put: merge-requests
    params:
      repository: repo
      status: failed
  on_success:
    put: merge-requests
    params:
      repository: repo
      status: success
- name: major
  public: true
  plan:
  - get: version
  - put: version
    params: {bump: major}
- name: minor
  public: true
  plan:
  - get: version
  - put: version
    params: {bump: minor}
- name: build
  public: true
  serial: true
  plan:
  - aggregate:
    - get: nodejs-image
      params: { save: false, download: false }
      trigger: true
    - get: version
      trigger: true
    - get: repo
      trigger: true
  - aggregate:
    - put: skills-api-image
      params:
        build: repo
        tag: version/number
        tag_as_latest: true
        cache_tag: latest
        cache: true
        # load_base: nodejs-image
        build_args:
          APP_VERSION: ((version/number))
- name: deploy
  public: true
  serial: true
  plan:
  - aggregate:
    - { get: version, passed: [build], trigger: true }
    - { get: repo, passed: [build], trigger: true }
    - get: release
      params:
        env: "test"
  - put: test-env
    params:
      chart: repo/kubernetes/skills-api-0.14.0.tgz
      release: release/name
      wait_until_ready: true
      debug: false # turn on to add --dry-run --debug to helm run
      replace: false
      override_values:
      - key: replicaCount
        value: "1"
      - key: image.tag
        path: version/number
      - key: IngressEnabled
        value: true
      - key: IngressHost
        value: "test.skills.35.198.160.30.nip.io"
  - put: release
- name: performance
  public: true
  serial: true
  plan:
  - aggregate:
    - { get: repo, passed: [deploy], trigger: false }
    - { get: version, passed: [deploy], trigger: false }
    - { get: release, passed: [deploy], trigger: true }
  - task: artillery-tests
    file: repo/ci/tasks/run-artillery-tests.yml
    params:
      env: staging
      # target: http://((release/name)).skills.ozzy.systems
      target: test.skills.35.198.160.30.nip.io
- name: stage
  public: true
  serial: true
  plan:
  - aggregate:
    - { get: version, passed: [performance], trigger: false }
    - { get: repo, passed: [performance], trigger: false }
    - get: release
      params:
        env: "staging"
  - put: staging
    params:
      chart: repo/kubernetes/skills-api-0.14.0.tgz
      release: release/name
      wait_until_ready: true
      debug: false # turn on to add --dry-run --debug to helm run
      replace: true
      override_values:
      - key: image.tag
        path: version/number
- name: ship
  public: true
  serial: true
  plan:
  - aggregate:
    - { get: version, passed: [stage], trigger: false }
    - { get: repo, passed: [stage], trigger: false }
    - get: release
      params:
        env: "production"
  - put: production
    params:
      chart: repo/kubernetes/skills-api-0.14.0.tgz
      release: release/name
      wait_until_ready: true
      debug: false # turn on to add --dry-run --debug to helm run
      replace: true
      override_values:
      - key: image.tag
        path: version/number
- name: build-images
  public: true
  serial: true
  plan:
  - get: repo
    trigger: true
  - aggregate:
    - put: artillery
      params:
        build: repo/ci/images/cucumber
        cache_tag: latest
        cache: true
    - put: cucumber
      params:
        build: repo/ci/images/cucumber
        tag_as_latest: true
        cache_tag: latest
        cache: true

resources:
- name: version
  type: semver
  source:
    driver: git
    initial_version: 0.0.1
    uri: {{gitlab-repo}}
    branch: version
    file: version
    private_key: {{gitlab-private-key}}
- name: repo
  type: git
  source:
    uri: {{gitlab-repo}}
    branch: master
    private_key: {{gitlab-private-key}}
- name: nodejs-image
  type: docker-image
  source:
    repository: node
    tag: 8.8.1-alpine
- name: skills-api-image
  type: docker-image
  source:
    repository: senforsce/skills-api
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
- name: test-env
  type: helm
  source:
    cluster_url: {{kubernetes-url}}
    cluster_ca: {{kubernetes-ca}}
    admin_key: {{kubernetes-admin-key}}
    admin_cert: {{kubernetes-admin-cert}}
    namespace: test-env
- name: staging
  type: helm
  source:
    cluster_url: {{kubernetes-url}}
    cluster_ca: {{kubernetes-ca}}
    admin_key: {{kubernetes-admin-key}}
    admin_cert: {{kubernetes-admin-cert}}
    namespace: staging
- name: production
  type: helm
  source:
    cluster_url: {{kubernetes-url}}
    cluster_ca: {{kubernetes-ca}}
    admin_key: {{kubernetes-admin-key}}
    admin_cert: {{kubernetes-admin-cert}}
    namespace: production
- name: merge-requests
  type: merge-request
  source:
    uri: {{gitlab-repo}}
    private_key: {{gitlab-private-key}}
    private_token: {{gitlab-private-token}}
- name: artillery
  type: docker-image
  source:
    repository: senforsce/artillery
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
- name: cucumber
  type: docker-image
  source:
    repository: senforsce/cucumber
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
- name: release
  type: smuggler
  source:
    smuggler_debug: true
    target_file: name
    app_name: skills-api
    commands:
      check: |
        echo "${SMUGGLER_app_name}-$(cat /dev/urandom | tr -dc 'a-z1-9' | fold -w 8 | head -n 1)" > ${SMUGGLER_OUTPUT_DIR}/versions
      in: |
        echo "${SMUGGLER_VERSION_ID}" > \
          ${SMUGGLER_DESTINATION_DIR}/${SMUGGLER_target_file}
        echo "date=$(date)" > ${SMUGGLER_OUTPUT_DIR}/metadata
      out: |
        version=$(cat "${SMUGGLER_SOURCES_DIR}/release/${SMUGGLER_target_file}")
        echo "${version}" > ${SMUGGLER_OUTPUT_DIR}/versions
        echo "date=$(date)\nfaked=true" > ${SMUGGLER_OUTPUT_DIR}/metadata

resource_types:
- name: helm
  source:
    repository: linkyard/concourse-helm-resource
  type: docker-image

- name: merge-request
  source:
    repository: jakedsouza/gitlab-merge-request-resource
  type: docker-image

- name: smuggler
  source:
    repository: redfactorlabs/concourse-smuggler-resource
    tag: alpine
  type: docker-image
